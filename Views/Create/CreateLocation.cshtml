@model VolunteerPlanner.Models.LocationsEventBundleModel

@{
    ViewData["Title"] = "Add Locations";
}

<div class="row">
    <div class="col-12 mx-auto mt-5">
        <h2 class="text-center">@ViewData["Title"]</h2>
        <div class="row mt-5">
            <div class="col-lg-4 col-md-12 pb-4">
                <div class="card">
                    <div class="card-header">
                        <h4>@Model.Event.Name</h4>
                    </div>
                    <div class="card-body pr-0 pb-0">
                        <h5>Locations:</h5>
                        <div id="locations">
                            @{
                                foreach (var location in @Model.Locations)
                                {
                                    <p class="pl-4">
                                        <a href="#" class="show_location" id="locationIdTitle_@location.LocationId">@location.Name</a>
                                    </p>
                                }
                            }
                        </div>
                    </div>
                    <div class="card-footer text-muted">
                        <p class="mb-0">@@@Model.Event.Address</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-8 col-md-12 pb-4 order-lg-last order-md-first order-sm-first order-xs-first">
                <div class="card text-center">
                    <div id="map" class="intrinsic-container intrinsic-container-16x9 card-body">

                    </div>
                    <div class="card-footer">
                        <a asp-controller="Details" asp-action="Dashboard" asp-route-id="@Model.Event.EventId" class="btn btn-primary my-2">Go to Event Details</a>
                    </div>
                </div>
            </div>
        </div>
        <script src="~/lib/jquery/dist/jquery.js"></script>
        <script src="~/lib/jquery/dist/jquery-ui.min.js"></script>
        <script>
            var map;
            var locations = [];
            var markers = [];
            var infowindow;

            @foreach(var location in @Model.Locations)
            {
                @:locations.push(['@location.LocationId', '@location.Name', '@location.Lat', '@location.Lng']);
            }
            
            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 16,
                    center: {lat: -34.397, lng: 150.644},
                    disableDefaultUI: true,
                    zoomControl: true
                });
                var geocoder = new google.maps.Geocoder();

                geocodeAddress(geocoder, map);

                infowindow = new google.maps.InfoWindow();

                for(let count=0; count<locations.length; count++){
                    addMarker(new google.maps.LatLng(locations[count][2], locations[count][3]), locations[count][0], locations[count][1]);
                }

                map.addListener('click', function(e) {
                    addMarker(e.latLng);
                });
            }

            function geocodeAddress(geocoder, resultsMap) {
                geocoder.geocode({'address': '@Model.Event.Address'}, function(results, status) {
                    if(status === 'OK') {
                        resultsMap.setCenter(results[0].geometry.location);
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }

            function addMarker(position, id, name){
                let newMarker = new google.maps.Marker({
                    position: position,
                    map: map,
                    draggable:true,
                    id: id,
                    title: name
                });

                markers.push(newMarker);

                for(let i=0; i<markers.length; i++){
                    let marker = markers[i];

                    google.maps.event.clearListeners(marker, 'click');
                    google.maps.event.addListener(marker, 'click', (function(marker) {
                        return function() {
                            if(typeof(marker.title) != 'undefined'){
                                infowindow.setContent('<div class="mx-3"><p class="form-control mb-0 py-1 edit_title" contenteditable="true" id="TitleId_'+marker.id+'">'+marker.title+'</p><form class="deleteLocation" action="deleteLocation" method="post"><input type="hidden" name="EventId" value="@Model.Event.EventId" /><input type="hidden" name="LocationId" value="'+marker.id+'" /><button class="col btn btn-primary btn-sm mt-2" type="submit">Remove Location</button></form></div>');
                            }else{
                                infowindow.setContent('<form class="addLocation mx-3" action="addLocation" method="post"><input type="hidden" name="EventId" value="@Model.Event.EventId" /><input class="form-control form-control-sm" type="text" name="Name" placeholder="Enter Location Name" /><button class="col btn btn-primary btn-sm mt-2" type="submit">Add Location</button></form>');
                            }

                            google.maps.event.clearListeners(infowindow, 'closeclick');
                            google.maps.event.addListener(infowindow,'closeclick', (function(currentMark) {
                                return function() {
                                    if(typeof(currentMark.title) == 'undefined') currentMark.setMap(null);
                                }
                            })(marker));

                            infowindow.open(map, marker);

                            addLocationFunctions();
  
                            $('.addLocation').off('submit').on('submit', function( event ) {
                                event.preventDefault();
                                
                                marker.title = this.Name.value;

                                $.ajax({
                                    headers: { 
                                        'Accept': 'application/json',
                                        'Content-Type': 'application/json' 
                                    },
                                    type: "POST",
                                    url: "/AddLocation",
                                    data: JSON.stringify({
                                        "EventId": this.EventId.value, 
                                        "Name": this.Name.value,
                                        "Lat": marker.position.lat(),
                                        "Lng": marker.position.lng()
                                    }),
                                    dataType: 'json',
                                    success: function(response){
                                        marker.id = response.locationId;

                                        infowindow.setContent('<div class="mx-3"><p class="form-control mb-0 py-1 edit_title" contenteditable="true" id="TitleId_'+marker.id+'">'+marker.title+'</p><form class="deleteLocation" action="deleteLocation" method="post"><input type="hidden" name="EventId" value="'+response.eventId+'" /><input type="hidden" name="LocationId" value="'+marker.id+'" /><button class="col btn btn-primary btn-sm mt-2" type="submit">Remove Location</button></form></div>');
                                        infowindow.close(map, marker);

                                        $('#locations').append('<p class="pl-4"><a href="#" class="show_location" id="locationIdTitle_'+marker.id+'">' + marker.title + '</a></p>');

                                        addLocationFunctions();
                                    }
                                });
                            });
                        }
                    })(marker));

                    google.maps.event.clearListeners(marker, 'dragend');
                    google.maps.event.addListener(marker, 'dragend', function() {
                        $.ajax({
                            headers: { 
                                'Accept': 'application/json',
                                'Content-Type': 'application/json' 
                            },
                            type: "PUT",
                            url: "/UpdateLocation",
                            data: JSON.stringify({
                                "LocationId": this.id,
                                "Lat": this.position.lat(),
                                "Lng": this.position.lng()
                            }),
                            dataType: 'json',
                            success: function(response){
                                console.log(response);
                            }
                        });
                    });

                    addLocationFunctions();
                }

                if(typeof(name) == 'undefined') new google.maps.event.trigger( newMarker, 'click' );
            }

            function addLocationFunctions(){
                $('.show_location').off("mouseenter").on("mouseenter", startMarker).off("mouseleave").on("mouseleave", stopMarker).off("click").on("click", locationTextClick);

                $('.edit_title').off("click").on("click", selectText).on( "keydown", setTitle );

                $('.deleteLocation').off('submit').on('submit', function( event ) {
                    event.preventDefault();
                    let id = this.LocationId.value;
                    
                    let marker = getMarkerById(id);

                    $.ajax({
                        headers: { 
                            'Accept': 'application/json',
                            'Content-Type': 'application/json' 
                        },
                        type: "DELETE",
                        url: "/DeleteLocation",
                        data: JSON.stringify({
                            "LocationId": marker.id
                        }),
                        dataType: 'json',
                        success: function(response){
                            $("#locationIdTitle_"+marker.id).remove();
                            marker.setMap(null);
                        }
                    });
                });
            }

            function setTitle(event){
                if(event.keyCode == 13){
                    event.preventDefault();
                    let $this = $(event.target);
                    let index = $this.attr('id').split("_")[1];
                    let marker = getMarkerById(index);
                    marker.title = $this.text();
                    $.ajax({
                        headers: { 
                            'Accept': 'application/json',
                            'Content-Type': 'application/json' 
                        },
                        type: "PUT",
                        url: "/UpdateLocation",
                        data: JSON.stringify({
                            "LocationId": marker.id,
                            "Lat": marker.position.lat(),
                            "Lng": marker.position.lng(),
                            "Name": marker.title
                        }),
                        dataType: 'json',
                        success: function(response){
                            $('#locationIdTitle_'+marker.id).html(marker.title);
                            infowindow.close(map, marker);
                        }
                    });
                }
            }

            function selectText(event){
                let selection = window.getSelection();
                let range = document.createRange();
                range.selectNodeContents(event.target);
                selection.removeAllRanges();
                selection.addRange(range);
            }

            function startMarker(event){
                let index = $(event.target).attr('id').split("_")[1];
                let marker = getMarkerById(index);
                marker.setAnimation(google.maps.Animation.BOUNCE);
            }

            function stopMarker(event){
                let index = $(event.target).attr('id').split("_")[1];
                let marker = getMarkerById(index);
                marker.setAnimation(null);
            }

            function locationTextClick(event){
                let index = $(event.target).attr('id').split("_")[1];
                let marker = getMarkerById(index);
                new google.maps.event.trigger( marker, 'click' );
            }

            function getMarkerById(id){
                for(let i=0; i<markers.length; i++){
                    if(markers[i].id == id){
                        marker = markers[i];
                        break;
                    }
                }
                return marker;
            }
        </script>
        <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBcFLcB_cuAHwGsWGlwHnYSY9VQcz3ioLc&callback=initMap"></script>

    </div>
</div>
