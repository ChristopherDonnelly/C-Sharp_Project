@model VolunteerPlanner.Models.LocationsEventBundleModel

@{
    ViewData["Title"] = "Add Locations";
}

<div class="row">
    <div class="col-12 mx-auto mt-5">
        <h2 class="text-center">@ViewData["Title"]</h2>
        <div class="row mt-5">
            <div class="col-lg-6 col-md-12 pb-4">
                <div class="card">
                    <div class="card-header">
                        <h4>@Model.Event.Name</h4>
                    </div>
                    <div class="card-body">
                        <h5>Locations:</h5>
                        @{
                            foreach (var location in @Model.Locations)
                            {
                                <p class="pl-4">@location.Name</p>
                            }
                        }
                    </div>
                    <div class="card-footer text-muted">
                        <p class="mb-0">@@@Model.Event.Address</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-12 pb-4 order-lg-last order-md-first order-sm-first order-xs-first">
                <div id="map" class="intrinsic-container intrinsic-container-16x9 card">

                </div>
            </div>
        </div>

        <script>
            var map;
            var locations = [];
            var markers = [];
            var infowindow;

            @foreach(var location in @Model.Locations)
            {
                @:locations.push(['@location.Name', '@location.Lat', '@location.Lng']);
            }

            console.log(locations.toString());
            
            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 16,
                    center: {lat: -34.397, lng: 150.644},
                    disableDefaultUI: true,
                    zoomControl: true
                });
                var geocoder = new google.maps.Geocoder();

                geocodeAddress(geocoder, map);

                infowindow = new google.maps.InfoWindow();

                for(let count=0; count<locations.length; count++){
                    console.log('Name: '+locations[count][0])
                    console.log('Lat: '+locations[count][1])
                    console.log('Lng: '+locations[count][2])
                    addMarker(new google.maps.LatLng(locations[count][1], locations[count][2]), locations[count][0]);
                }

                map.addListener('click', function(e) {
                    addMarker(e.latLng);
                });

            }

            function geocodeAddress(geocoder, resultsMap) {
                geocoder.geocode({'address': '@Model.Event.Address'}, function(results, status) {
                    if(status === 'OK') {
                        resultsMap.setCenter(results[0].geometry.location);
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }

            function addMarker(position, name){
                markers.push(new google.maps.Marker({
                    position: position,
                    map: map,
                    draggable:true,
                    animation: google.maps.Animation.DROP,
                    title: name
                }));

                for(let i=0; i<markers.length; i++){
                    let marker = markers[i];

                    google.maps.event.addListener(marker, 'click', (function(marker) {
                        return function() {
                            if(marker.title != 'undefined'){
                                infowindow.setContent('<strong>'+marker.title+'</strong><br><form><button class="col btn btn-dark btn-sm mt-2" type="submit">Remove Location</button></form>');
                            }else{
                                infowindow.setContent('<form><input class="form-control form-control-sm" type="text" placeholder="Enter Location Name" /><button class="col btn btn-dark btn-sm mt-2" type="submit">Add Location</button></form>');
                            }
                            infowindow.open(map, marker);
                        }
                    })(marker));

                    google.maps.event.addListener(marker, 'dragend', function() {
                        console.log(this.position.lat());
                        console.log(this.position.lng());
                    })
                }

            }

            function setPositionAsContent(marker){
                var infowindow = new google.maps.InfoWindow(
                {
                    content: "<div class=infowindow><h1>Bradford</h1><p>Population: 467,665</p></div>"
                });
                
                infowindow.open(map, marker);
            }

        </script>
        <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBcFLcB_cuAHwGsWGlwHnYSY9VQcz3ioLc&callback=initMap"></script>

    </div>
</div>
